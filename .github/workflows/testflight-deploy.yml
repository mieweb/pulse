name: Deploy to TestFlight
permissions:
  contents: read

"on":
  workflow_dispatch:

env:
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  API_KEY_ID: ${{ secrets.API_KEY_ID }}
  API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}
  API_KEY_PATH: ${{ secrets.API_KEY_PATH }}
  IOS_SCHEME: "pulse"
  IOS_WORKSPACE: "ios/pulse.xcworkspace"
  IOS_CONFIGURATION: "Release"
  IOS_DESTINATION: "generic/platform=iOS"

jobs:
  deploy-ios:
    name: Deploy iOS App to TestFlight
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Install Expo CLI
        run: npm install -g @expo/cli

      - name: Set version from app.json
        run: |
          VERSION=$(node -p "require('./app.json').expo.version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Prebuild iOS project
        run: npx expo prebuild

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install
          cd ..

      - name: Setup API Key Authentication
        run: |
          API_KEY_FILE="$(pwd)/AuthKey_${API_KEY_ID}.p8"
          echo "${API_KEY_PATH}" | base64 -d > "$API_KEY_FILE"
          echo "API_KEY_FILE=$API_KEY_FILE" >> $GITHUB_ENV

      - name: Build iOS Archive
        run: |
          mkdir -p ./build

          xcodebuild archive \
            -workspace "$IOS_WORKSPACE" \
            -scheme "$IOS_SCHEME" \
            -configuration "$IOS_CONFIGURATION" \
            -destination "$IOS_DESTINATION" \
            -archivePath ./build/pulse.xcarchive \
            -allowProvisioningUpdates \
            -authenticationKeyPath "$API_KEY_FILE" \
            -authenticationKeyID "${API_KEY_ID}" \
            -authenticationKeyIssuerID "${API_KEY_ISSUER_ID}" \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID"

      - name: Export IPA
        run: |
          cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>teamID</key>
            <string>$APPLE_TEAM_ID</string>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>automatic</string>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath ./build/pulse.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates \
            -authenticationKeyPath "$API_KEY_FILE" \
            -authenticationKeyID "${API_KEY_ID}" \
            -authenticationKeyIssuerID "${API_KEY_ISSUER_ID}"

      - name: Upload to TestFlight
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          cp "$API_KEY_FILE" ~/.appstoreconnect/private_keys/

          xcrun altool --upload-app \
            --type ios \
            --file ./build/pulse.ipa \
            --apiKey "${API_KEY_ID}" \
            --apiIssuer "${API_KEY_ISSUER_ID}"

      - name: Deployment summary
        run: |
          echo "## 🚀 Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: TestFlight" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
